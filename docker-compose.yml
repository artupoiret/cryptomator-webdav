services:
  cryptomator-webdav: &base
    build:
      context: .
      dockerfile: Dockerfile
    image: greycubesgav/cryptomator-webdav
    container_name: cryptomator-webdav
    platform: linux/amd64
    env_file:
      - .env
    ports:
      # Bind to the internal interface of the host
      - "${CRYPTOMATOR_HOST}:${CRYPTOMATOR_PORT}:8443/tcp"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - type: bind
        source: ${CRYPTOMATOR_VAULT_SRC_PATH}
        target: /vault
        read_only: false
        bind:
          create_host_path: false
  cryptomator-webdav-passfile:
    # Adds passfile mount to container
    <<: *base
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "${CRYPTOMATOR_VAULT_SRC_PATH}:/vault:rw"
      - "${CRYPTOMATOR_VAULT_PASSFILE}:/vault.pass:ro"
  cryptomator-webdav-dev: &dev
    # Used for local login and debugging of init scripts
    <<: *base
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "${CRYPTOMATOR_VAULT_SRC_PATH}:/vault:rw"
      - './scripts/entrypoint.sh:/entrypoint.sh:ro'
      - './scripts/init.sh:/init.sh:ro'
      - './config/stunnel.conf:/etc/stunnel/stunnel.conf:ro'
    entrypoint: /usr/bin/env bash
  cryptomator-webdav-passfile-dev:
    # Adds passfile mount to dev container
    <<: *dev
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "${CRYPTOMATOR_VAULT_SRC_PATH}:/vault:rw"
      - "${CRYPTOMATOR_VAULT_PASSFILE}:/vault.pass:ro"
      - './scripts/entrypoint.sh:/entrypoint.sh:ro'
      - './scripts/init.sh:/init.sh:ro'
    devices:
      - /dev/fuse
    privileged: true
  cryptomator-webdav-env:
    <<: *base
    entrypoint: /usr/bin/env sh -c 'export | grep CRYPTOMATOR_'
